====================================================================================================== WYKRES SŁUPKOWY ======================================================================================================
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df = pd.DataFrame({
    'Kwartał': ['Q1', 'Q2', 'Q3', 'Q4'],
    'Telefony': [30, 25, 50, 20],
    'Laptopy': [40, 23, 51, 17],
    'Tablety': [35, 22, 45, 19]
})

telefony = df['Telefony']
laptopy = df['Laptopy']
tablety = df['Tablety']
kwartaly = df['Kwartał']
X = np.arange(len(kwartaly))
plt.bar(X - 0.25, telefony, color='dodgerblue', width=0.25, label='Telefony')
plt.bar(X, laptopy, color='mediumseagreen', width=0.25, label='Laptopy')
plt.bar(X + 0.25, tablety, color='tomato', width=0.25, label='Tablety')
plt.xticks(X, kwartaly)
plt.legend()
plt.title('Sprzedaż produktów elektronicznych w poszczególnych kwartałach', fontsize=14)
plt.ylabel('Liczba sprzedanych sztuk')
plt.xlabel('Kwartał')
plt.grid(axis='y', alpha=0.3)
plt.tight_layout()
plt.show()

===================================================================================================== POZIOMY

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df = pd.DataFrame({
    'Kwartał': ['Q1', 'Q2', 'Q3', 'Q4'],
    'Telefony': [30, 25, 50, 20],
    'Laptopy': [40, 23, 51, 17],
    'Tablety': [35, 22, 45, 19]
})

telefony = df['Telefony']
laptopy = df['Laptopy']
tablety = df['Tablety']
kwartaly = df['Kwartał']
Y = np.arange(len(kwartaly))
plt.barh(Y, telefony, color='dodgerblue', height=0.25, label='Telefony')
plt.barh(Y + 0.25, laptopy, color='mediumseagreen', height=0.25, label='Laptopy')
plt.barh(Y + 0.50, tablety, color='tomato', height=0.25, label='Tablety')
plt.yticks(Y + 0.25, kwartaly)
plt.legend()
plt.title('Sprzedaż produktów elektronicznych w poszczególnych kwartałach', fontsize=14)
plt.xlabel('Liczba sprzedanych sztuk')
plt.ylabel('Kwartał')
plt.grid(axis='x', alpha=0.3)
plt.tight_layout()
plt.show()

===============================================================================================POZIOMY OD ŚRODKA

import matplotlib.pyplot as plt
import numpy as np

# Dane
miesiace = ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec']
A = [30, 35, 40, 25, 1, 10]      # dodatnie
B = [-30, -25, -40, -30, -25, -30]  # ujemne

# Rysowanie wykresu
plt.barh(miesiace, B, color='turquoise', label='B')  # ujemne
plt.barh(miesiace, A, color='violet', label='A')     # dodatnie

plt.title('Wykres zmian A i B')
plt.legend()
plt.tight_layout()
plt.show()

================================================================================================== WYKRES PUNKTOWY ==================================================================================================
import matplotlib.pyplot as plt

fig, ax = plt.subplots()
house_prices = [230000, 350000, 480000, 280000, 420000, 610000, 390000, 580000]
square_meters = [90, 140, 210, 100, 170, 260, 150, 240]
ax.scatter(square_meters, house_prices, color='blue', marker='o')
ax.set_xlabel('Metraż [m2]')
ax.set_ylabel('Cena domu [PLN]')
ax.set_title('Związek między metrażem a ceną domu')
plt.show()

===============================================================================================

import pandas as pd
import matplotlib.pyplot as plt

data = {
    'product_id': [101, 102, 103, 104, 105, 106, 107, 108, 109, 110],
    'price': [19.99, 29.99, 14.99, 49.99, 9.99, 39.99, 24.99, 34.99, 44.99, 15.99],
    'units_sold': [150, 85, 200, 50, 300, 75, 120, 95, 60, 180],
    'rating': [4.5, 4.2, 4.8, 3.9, 4.6, 4.1, 4.3, 4.0, 3.8, 4.7],
    'discount': [0.1, 0.05, 0.15, 0.0, 0.2, 0.1, 0.05, 0.08, 0.0, 0.12]
}

df = pd.DataFrame(data)
x_values = df['price']
y_values = df['units_sold']
colors = df['rating']
sizes = df['discount'] * 1000 + 50

fig, ax = plt.subplots()
scatter = ax.scatter(x_values, y_values, s=sizes, c=colors, alpha=0.7, cmap='viridis')
cbar = fig.colorbar(scatter, ax=ax)
cbar.set_label('Ocena produktu')

ax.set_xlabel('Cena produktu (PLN)')
ax.set_ylabel('Liczba sprzedanych sztuk')
ax.set_title('Analiza sprzedaży')
ax.grid(True, alpha=0.3)

plt.show()

=================================================================================================== WYKRES LINIOWY ===================================================================================================
import matplotlib.pyplot as plt
import numpy as np

# Tworzenie danych
daty = np.arange('2024-01', '2025-01', dtype='datetime64')
index = np.arange(len(daty))
y_1 = index
y_2 = index**2
y_3 = index**3

# Tworzenie figury i osi w podejściu obiektowym
fig, ax = plt.subplots()

# Rysowanie linii na osiach
ax.plot(daty, y_1, label='Liniowa')
ax.plot(daty, y_2, label='Kwadratowa')
ax.plot(daty, y_3, label='Sześcienna')

# Dodawanie etykiet i tytułu
ax.set_xlabel('Miesiąc (2024)')
ax.set_ylabel('Wartość')
ax.set_title('Funkcje w roku 2024')

# Dodawanie legendy i siatki
ax.legend()
ax.grid(True)

# Dostosowanie wyglądu - opcjonalne ulepszenia
fig.autofmt_xdate()  # Automatyczne formatowanie dat na osi X dla lepszej czytelności
plt.tight_layout()   # Automatyczne dostosowanie rozmiaru wykresu

# Wyświetlenie wykresu
plt.show()

=============================================================================================== WYKRES KOŁOWY (pie) ==================================================================================================

import matplotlib.pyplot as plt
import matplotlib.cm as cm  

kategorie = ['Czynsz', 'Jedzenie', 'Transport', 'Rozrywka', 'Oszczędności', 'Inne']
wydatki = [1500, 800, 400, 300, 500, 250]

cmap = plt.colormaps['Set3']
kolory = [cmap(i) for i in range(len(kategorie))]

fig, ax = plt.subplots(figsize=(10, 8))

ax.pie(wydatki, labels=kategorie, colors=kolory, autopct='%1.1f%%', startangle=90)
ax.set_title('Podział wydatków w budżecie domowym', fontsize=16, fontweight='bold')
ax.axis('equal')

plt.show()

=========================================================================================== DONUT

import matplotlib.pyplot as plt
import numpy as np

np.random.seed(345)
data = np.random.randint(20, 100, 6)
total = sum(data)
data_per = data / total * 100
explode = (0.2, 0, 0, 0, 0, 0)  # wysunięcia

fig, ax = plt.subplots()
ax.pie(data_per, explode=explode, labels=[round(i, 2) for i in list(data_per)])
circle = plt.Circle((0, 0), 0.7, color='white')
ax.text(0, 0, "RAZEM\n100%", ha='center', va='center', fontsize=12, color='black') # tekst
ax.add_artist(circle)
plt.show()

=========================================================================================== WYKRES MAPY CIEPŁA (HEATMAP) =============================================================================================

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

heatmap_data = pd.DataFrame(
    [[23, 45, 12, 34, 56],
     [33, 54, 22, 43, 66],
     [12, 34, 15, 28, 39],
     [44, 55, 31, 47, 62]]
)

plt.imshow(heatmap_data, cmap='YlOrRd', aspect='auto')
plt.colorbar(label='Liczba klientów')
plt.title('Mapa ciepła klientów')
plt.xlabel('Godziny')
plt.ylabel('Dni')
plt.show()

========================================================================

import matplotlib.pyplot as plt
import numpy as np

data = np.array([
    [23, 45, 12, 34, 56],
    [33, 54, 22, 43, 66],
    [12, 34, 15, 28, 39],
    [44, 55, 31, 47, 62]
])

days = ['Poniedziałek', 'Wtorek', 'Środa', 'Czwartek']
hours = ['9–11', '11–13', '13–15', '15–17', '17–19']

fig, ax = plt.subplots(figsize=(8, 6))
cax = ax.imshow(data, cmap='Greens')

ax.set_xticks(np.arange(len(hours)))
ax.set_xticklabels(hours, rotation=45, ha='right')
ax.set_yticks(np.arange(len(days)))
ax.set_yticklabels(days)

for i in range(data.shape[0]):
    for j in range(data.shape[1]):
        ax.text(j, i, str(data[i, j]), ha='center', va='center', color='black')

fig.colorbar(cax, ax=ax, orientation='vertical', label='Liczba klientów')

ax.set_title('Liczba klientów w sklepie wg dnia i godziny')
fig.tight_layout()

plt.show()

================================================================================================== WYKRES WARSTWOWY =================================================================================================

import pandas as pd
import matplotlib.pyplot as plt

data = {
    'Dzień': ['Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek'],
    'Mobilne': [1500, 1800, 1600, 1700, 2000],
    'Desktop': [1200, 1100, 1300, 1250, 1400],
    'Tablet': [300, 350, 320, 310, 360]
}

df = pd.DataFrame(data)

x = df['Dzień']
y1 = df['Mobilne']
y2 = df['Desktop']
y3 = df['Tablet']

plt.figure(figsize=(10,6))
plt.stackplot(
    x, y1, y2, y3,
    labels=['Mobilne', 'Desktop', 'Tablet'],
    colors=['SteelBlue', 'MediumSeaGreen', 'IndianRed'],
    alpha=0.8
)
plt.title('Ruch na stronie według urządzeń w ciągu tygodnia')
plt.xlabel('Dzień tygodnia')
plt.ylabel('Liczba odwiedzin')
plt.legend(loc='upper left')
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

====================================================================================================== ZESTAW 1 ======================================================================================================

=====================================================================================  zad 1

import matplotlib.pyplot as plt
import numpy as np

data = np.array([
    [23, 45, 12, 34, 56],
    [33, 54, 22, 43, 66],
    [12, 34, 15, 28, 39],
    [44, 55, 31, 47, 62]
])

days = ['Poniedziałek', 'Wtorek', 'Środa', 'Czwartek']
hours = ['9–11', '11–13', '13–15', '15–17', '17–19']

fig, ax = plt.subplots(figsize=(8, 6))
cax = ax.imshow(data, cmap='Greens')

ax.set_xticks(np.arange(len(hours)))
ax.set_xticklabels(hours, rotation=45, ha='right')
ax.set_yticks(np.arange(len(days)))
ax.set_yticklabels(days)

for i in range(data.shape[0]):
    for j in range(data.shape[1]):
        ax.text(j, i, str(data[i, j]), ha='center', va='center', color='black')

fig.colorbar(cax, ax=ax, orientation='vertical', label='Liczba klientów')

ax.set_title('Liczba klientów w sklepie wg dnia i godziny')
fig.tight_layout()

plt.show()


=======================================================================================  zad 2
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.cm as cm

df = pd.read_excel("licea11.xlsx")

print(df)

df1 = df.loc[df["Wartość"] < 150]

print(df1)

fig, ax = plt.subplots()
cmap = plt.colormaps['Set3']

kolory = [cmap(i) for i in range(len(df1))]

max_index = df1["Wartość"].idxmax()
explode = [0.1 if i == max_index else 0 for i in df1.index]

ax.pie(df1["Wartość"], labels=df1["Nazwa"], colors=kolory, startangle=15, counterclock=False, explode=explode, autopct="%d%%")

circle = plt.Circle((0, 0), 0.7, color='white')
p = plt.gcf()
p.gca().add_artist(circle)

ax.set_title("jakies tam wartości")
fig.text(0,0,"14.06.2025")
plt.show()

======================================================================================== zad 3

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect


data = pd.read_csv("koleje11.csv", sep=" ")

df = data.melt(id_vars='Marka', var_name='Rok', value_name='Wartość')
df['Rok'] = df['Rok'].astype(int)

Eurostar = df.loc[df["Marka"] == "Eurostar"]
SNCF = df.loc[df["Marka"] == "SNCF"]

fig, axs = plt.subplots(1,2, figsize=(14,4))

axs[0].barh(Eurostar["Rok"], Eurostar["Wartość"], color="skyblue")
axs[0].set_title("Eurostar")
axs[0].set_xlabel("Wartość")
axs[0].set_ylabel("Rok")
axs[0].grid(True, axis='x', linestyle='--', alpha=0.7)
axs[0].set_xticks(np.arange(0, 15000, 2000))

axs[1].barh(SNCF["Rok"], SNCF["Wartość"], color="lightgreen")
axs[1].set_title("SNCF")
axs[1].set_xlabel("Wartość")
axs[1].grid(True, axis='x', linestyle='--', alpha=0.7)
axs[1].set_xticks(np.arange(0, 15000, 2000))

fig.suptitle("Porównanie wartości Eurostar i SNCF w latach 2010–2019", fontsize=14)
plt.tight_layout()
plt.show()


print(df)




====================================================================================================== ZESTAW 2 =====================================================================================================
=======================================================================================  zad 1

import matplotlib.pyplot as plt
import numpy as np

np.random.seed(0)

x = np.random.exponential(scale=100, size=90)

plt.hist(x, bins=[0, 200, 400, 600, 800], edgecolor='black', color='steelblue')

plt.ylabel("Liczba pomiarów")
plt.yticks([0, 20, 40, 60, 80])
plt.xlabel("Czas reakcji")
plt.xticks([0, 200, 400, 600, 800])
plt.title("Histogram czasu reakcji")
plt.grid(axis='y', linestyle='--', alpha=0.5)
plt.tight_layout()
plt.show()

=======================================================================================  zad 2

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.cm as cm

df = pd.read_excel("sprzedaz12.xlsx")
print(df)

Jabłka = df[df["Produkt"] == "Jabłka"]["Sprzedaż"].values
Gruszki = df[df["Produkt"] == "Gruszki"]["Sprzedaż"].values
Morele = df[df["Produkt"] == "Morele"]["Sprzedaż"].values

Rok = sorted(df["Rok"].unique())

fig, ax = plt.subplots()

X = np.arange(len(Rok))
ax.barh(X - 0.25, Jabłka, height=0.25, label='Jabłka')
ax.barh(X, Gruszki, height=0.25, label='Gruszki')
ax.barh(X + 0.25, Morele, height=0.25, label='Morele')

ax.set_xticks(np.arange(0, 2100, 300))
ax.set_yticks(X)
ax.set_yticklabels(Rok)

plt.xlabel('Produkty')
plt.title('sprzedaz produktów na przestrzeni lat')
plt.legend()
plt.grid()
fig.text(0,0,"14.06.2025")


plt.show()


======================================================================================== zad 3

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect

df = pd.read_csv("travel12.csv", sep=";")
print(df)

df["Transport"] = df["Transport"].astype(float).round(2)
df["Zakwaterowanie"] = df["Zakwaterowanie"].astype(float).round(2)
df["Jedzenie"] = df["Jedzenie"].astype(float).round(2)
df["Zwiedzanie"] = df["Zwiedzanie"].astype(float).round(2)
df["Inne"] = df["Inne"].astype(float).round(2)

włochy = df.loc[df["Podróż"] == "Włochy"]
Hiszpania = df.loc[df["Podróż"] == "Hiszpania"]

włochy1 = włochy.iloc[0, 1:].values
Hiszpania1 = Hiszpania.iloc[0, 1:].values


fig, axs = plt.subplots(1,2,figsize=(14,4))

kolory = ["Green", "Blue", "Purple","Yellow","Brown"]

axs[0].pie(włochy1, labels=["Transport","Zakwaterowanie","Jedzenie","Zwiedzanie","Inne"], colors=kolory, autopct='%1.1f%%')
axs[0].set_title('Hiszpania')
axs[0].set_aspect('equal')


axs[1].pie(Hiszpania1, labels=["Transport","Zakwaterowanie","Jedzenie","Zwiedzanie","Inne"], colors=kolory, autopct='%1.1f%%')
axs[1].set_title('Włochy')
axs[1].set_aspect('equal')

plt.show()



====================================================================================================== ZESTAW 3 =====================================================================================================
======================================================================================== zad 1

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.DataFrame({'Panstwo': ['PL', 'DE', 'FR', 'SK'],
                'A': [20, 41, 18, 43],
                'B': [10, 21, 42, 24],
                'C': [64, 70, 60, 67]
})

A= df['A']
B=df['B']
C=df['C']
Panstwo = df['Panstwo']

Y= np.arange(len(Panstwo))

plt.barh(Y,A, color='lightgray', height=0.25,label='A')
plt.barh(Y+0.25,B,color='darkorange',height=0.25,label='B')
plt.barh(Y+0.50,C,color='yellowgreen',height=0.25,label='C')

plt.yticks(Y+ 0.25,Panstwo)
plt.legend(loc='upper right')
plt.title('Wykres',fontsize=14)
plt.xlabel('Podpis osi 2')
plt.ylabel('Podpis osi 1')

plt.grid(alpha=0.3)
plt.tight_layout()

plt.show()

======================================================================================== zad 2

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect


conn = connect('parki13.db')
df1 = pd.read_sql("SELECT * FROM dane", con=conn)
print(df1.columns)

df = df1.loc[df1["Rok"] == 2016]
DF = df[df['Nazwa'].isin(['MAZOWIECKIE', 'ŚLĄSKIE', 'WIELKOPOLSKIE', 'MAŁOPOLSKIE', 'DOLNOŚLĄSKIE'])]
kolory = ["Green","Blue","Purple","Orange","Red"]

plt.pie(DF['Wartosc'], labels=DF["Nazwa"], colors=kolory, autopct='%1.1f%%', )

plt.title("Wartości Terenów zielonych poszczególnych wojewódcstw")

plt.show()

======================================================================================== zad 3

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect

df = pd.read_csv("hr13.csv", sep=";",)
print(df.columns)

df["Dochód_miesięczny_PLN"] = df["Dochód_miesięczny_PLN"].str.replace(",", ".").astype(float).round(2)
df["Liczba_godzin_pracy_tygodniowo"] = df["Liczba_godzin_pracy_tygodniowo"].str.replace(",", ".").astype(float).round(2)
df["Lata_doświadczenia_zawodowego"] = df["Lata_doświadczenia_zawodowego"].str.replace(",", ".").astype(float).round(2)


koszyki = pd.cut(df["Lata_doświadczenia_zawodowego"], bins=5, right=False)


plt.figure(figsize=(8,5))


plt.hist(df["Lata_doświadczenia_zawodowego"], bins=5)



plt.xlabel("lata doświadczenia")
plt.ylabel("liczba osob")
plt.title("gówno")

plt.tight_layout()
plt.show()

plt.show()

print(df.head())


====================================================================================================== ZESTAW 4 =====================================================================================================
======================================================================================== zad 1

import matplotlib.pyplot as plt
import numpy as np

znaki = ["A","B","C","D","E","F","G"]
wyniki = [10,7,23,4,20,13,25]
explode = (0.2, 0, 0.2, 0, 0.2, 0, 0)
fig, ax = plt.subplots()
ax.pie(wyniki, explode=explode, labels=znaki, counterclock=True, startangle=90)
circle = plt.Circle((0, 0), 0.5, color='white')
ax.text(-0.19,0, "ABCDEFG")
ax.add_artist(circle)
plt.show()


======================================================================================== zad 2

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect

df = pd.read_excel("handel15.xlsx")
print(df)
sklepy = df.loc[df["Wyszczególnienie"] == "sklepy"]
y_pos = np.arange(len(sklepy))
cmap = plt.colormaps['Set3']
kolory = [cmap(i) for i in range(len(sklepy))]

fig, ax = plt.subplots(figsize=(8,6))

ax.barh(y_pos, sklepy['Wartosc'],label= sklepy["Rok"], color=kolory, alpha=0.8)
ax.set_yticks(y_pos, sklepy['Rok'])
ax.set_ylabel('Produkty')
ax.set_xlabel('Liczba sprzedanych sztuk')
plt.title('Sprzedaż produktów elektronicznych w ostatnim miesiącu')
ax.grid(axis='x', alpha=0.3)
plt.tight_layout()
plt.legend()
fig.text(0.95,0.96,"2137")

plt.show()



=================================================================================== RANDOM

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sqlite3 import connect

df = pd.read_excel("mleko13.xlsx")

mleko = df.loc[df["Rodzaje produktów"] == "Mleko 3,2% tłuszczu - za 1 l"]
jogurt = df.loc[df["Rodzaje produktów"] == "Jogurt naturalny - za 150g"]

fig, ax = plt.subplots()
ax.scatter(mleko["Rok"],mleko["Wartosc"], label="Mleko", color="green", marker="^", s=75)
ax.scatter(jogurt["Rok"],jogurt["Wartosc"], label="jogurt", color="blue", marker="h", s=100)

ax.set_ylabel("Cena")
ax.set_xlabel("Rok")

plt.title("Gówno")
plt.grid(alpha=0.5)
plt.legend(loc=3)

plt.annotate("niezla sperma",(2016,df["Wartosc"].max()), xytext=(2014,df["Wartosc"].max() - 0.5), arrowprops=dict(facecolor="green"))

plt.show()



